/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bus, BusInterface } from "../Bus";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_model",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "busAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "model",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_model",
        type: "string",
      },
    ],
    name: "setModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051620009fe380380620009fe833981810160405281019062000029919062000204565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001908051906020019062000081929190620000cb565b5030600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003dd565b828054620000d9906200032f565b90600052602060002090601f016020900481019282620000fd576000855562000149565b82601f106200011857805160ff191683800117855562000149565b8280016001018555821562000149579182015b82811115620001485782518255916020019190600101906200012b565b5b5090506200015891906200015c565b5090565b5b80821115620001775760008160009055506001016200015d565b5090565b6000620001926200018c8462000292565b6200025e565b905082815260208101848484011115620001ab57600080fd5b620001b8848285620002f9565b509392505050565b600081519050620001d181620003c3565b92915050565b600082601f830112620001e957600080fd5b8151620001fb8482602086016200017b565b91505092915050565b600080604083850312156200021857600080fd5b60006200022885828601620001c0565b925050602083015167ffffffffffffffff8111156200024657600080fd5b6200025485828601620001d7565b9150509250929050565b6000604051905081810181811067ffffffffffffffff8211171562000288576200028762000394565b5b8060405250919050565b600067ffffffffffffffff821115620002b057620002af62000394565b5b601f19601f8301169050602081019050919050565b6000620002d282620002d9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101562000319578082015181840152602081019050620002fc565b8381111562000329576000848401525b50505050565b600060028204905060018216806200034857607f821691505b602082108114156200035f576200035e62000365565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003ce81620002c5565b8114620003da57600080fd5b50565b61061180620003ed6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630ad9d0521461005c57806313af40351461007a57806346d75c8c146100965780636438315e146100b25780638da5cb5b146100d0575b600080fd5b6100646100ee565b6040516100719190610410565b60405180910390f35b610094600480360381019061008f9190610343565b61017c565b005b6100b060048036038101906100ab919061036c565b6101bf565b005b6100ba6101d9565b6040516100c791906103f5565b60405180910390f35b6100d86101ff565b6040516100e591906103f5565b60405180910390f35b600180546100fb90610523565b80601f016020809104026020016040519081016040528092919081815260200182805461012790610523565b80156101745780601f1061014957610100808354040283529160200191610174565b820191906000526020600020905b81548152906001019060200180831161015757829003601f168201915b505050505081565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600190805190602001906101d5929190610223565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b82805461022f90610523565b90600052602060002090601f0160209004810192826102515760008555610298565b82601f1061026a57805160ff1916838001178555610298565b82800160010185558215610298579182015b8281111561029757825182559160200191906001019061027c565b5b5090506102a591906102a9565b5090565b5b808211156102c25760008160009055506001016102aa565b5090565b60006102d96102d484610463565b610432565b9050828152602081018484840111156102f157600080fd5b6102fc8482856104e1565b509392505050565b600081359050610313816105c4565b92915050565b600082601f83011261032a57600080fd5b813561033a8482602086016102c6565b91505092915050565b60006020828403121561035557600080fd5b600061036384828501610304565b91505092915050565b60006020828403121561037e57600080fd5b600082013567ffffffffffffffff81111561039857600080fd5b6103a484828501610319565b91505092915050565b6103b6816104af565b82525050565b60006103c782610493565b6103d1818561049e565b93506103e18185602086016104f0565b6103ea816105b3565b840191505092915050565b600060208201905061040a60008301846103ad565b92915050565b6000602082019050818103600083015261042a81846103bc565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561045957610458610584565b5b8060405250919050565b600067ffffffffffffffff82111561047e5761047d610584565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006104ba826104c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561050e5780820151818401526020810190506104f3565b8381111561051d576000848401525b50505050565b6000600282049050600182168061053b57607f821691505b6020821081141561054f5761054e610555565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6105cd816104af565b81146105d857600080fd5b5056fea26469706673582212201d6f3b28f724d8d0d3bd94c2e835723239d5cc2387fd3dfc1078c0880c8bd19664736f6c63430008000033";

export class Bus__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _owner: string,
    _model: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Bus> {
    return super.deploy(_owner, _model, overrides || {}) as Promise<Bus>;
  }
  getDeployTransaction(
    _owner: string,
    _model: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _model, overrides || {});
  }
  attach(address: string): Bus {
    return super.attach(address) as Bus;
  }
  connect(signer: Signer): Bus__factory {
    return super.connect(signer) as Bus__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BusInterface {
    return new utils.Interface(_abi) as BusInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bus {
    return new Contract(address, _abi, signerOrProvider) as Bus;
  }
}
